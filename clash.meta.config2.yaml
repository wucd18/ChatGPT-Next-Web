# 本配置文件适用于clash.meta Alpha分支，如果要用于clash或者clash-premium，要进行一些改动，详情见注释
# 电脑端clash内核运行日志文件、规则文件、WebUI、.mmdb、.dat文件在C:\Users\用户名\.config\clash
# 2023.5.29 添加负载均衡
# 添加了DNS部分的代码注释，并引入clash.meta专属的geox-url进行实现dns分流。

# 填写proxy-providers条目下的两个链接，按照自身需求修改proxy-groups中前三项内容

# HTTP 代理端口
#port: 7890

# SOCKS5 代理端口
#socks-port: 7891

# Linux 和 macOS 的 redir 代理端口
#redir-port: 7892

# 使用混合端口
mixed-port: 7788

# 允许局域网的连接
allow-lan: true
bind-address: "*"
mode: Rule
log-level: warning
ipv6: true
hosts:
  services.googleapis.cn: 216.58.200.67
  www.google.cn: 216.58.200.67

# 外部管理IP和端口
external-controller: 0.0.0.0:6670
# 外部管理密码
secret: 'wcd15665536535'

# 静态网页资源（如 clash-dashboard）放置在一个目录中，clash 将会服务于 `RESTful API/ui`
# 参数应填写配置目录的相对路径或绝对路径。
#external-ui: ./ui     # 将ui放到C:\Users\用户名\.config\clash目录下

clash-for-android:
  append-system-dns: false
profile:
  tracing: true

# clash.Meta功能，配置tun模式，建立虚拟网卡劫持所有网络流量，使其强制通过clash内核，不设置也行，可以在webui里直接打开开关
tun:
  enable: true
  stack: System
  device: Meta_Tun
  auto-detect-interface: true
  auto-route: true
  dns-hijack:
    - any:53

# clash.meta专属功能，导入外部GeoIP数据库，
geodata-mode: true    # 开启geodata模式，则可支持V2Ray的.dat文件
geox-url:             # 来源为Loyalsoldier整理的数据库
  geoip: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geoip.dat"
  geosite: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geosite.dat"
  mmdb: "https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/Country.mmdb"

dns:
  enable: true
  # 监听53端口，没有管理员或者root权限时无法监听53端口，此时可以将其改为1024以上的值。
  listen: :53
  # 连接到加密DNS服务时，需要解析服务器本身的域名，需要指定一些相对干净的国内明文DNS服务器地址，以下列举了比较好的DNS，用ping来测试，选择两个
  default-nameserver: 
    # - 1.1.1.1         # Cloudflare
    - 223.5.5.5       # 阿里
    # - 1.0.0.1         # Cloudflare
    - 119.29.29.29    # 腾讯
    # - 208.67.222.222  # OpenDNS
    # - 100.125.1.250   # 华为
  ipv6: false
  
  # 在fake-ip模式下，clash会返回一个伪造的、非公网可达到的IP地址用于DNS请求的响应，之后根据这个伪造的IP地址识别和分流流量，可以减少与DNS服务器之间的通信，减少DNS污染。
  enhanced-mode: fake-ip

  # fake-ip-range表示伪造IP地址的范围，默认值是192.18.0.1/16，表示192.18.0.1~192.18.255.255的所有IP地址，此处我们可以使用192.18.0.0/15，因为这个IP地址范围根据互联网工程任务组（IETF）的 RFC 2544 文档，被保留作为用于网络设备性能基准测试的 IP 地址，不会出现在公共互联网上，但是我们应该在fake-ip-filter中过滤这个范围内的内网IP地址。
  #fake-ip-range: 192.18.0.0/15

  # fake-ip-filter用于指定一组域名，这些域名的DNS请求将绕过fake-ip模式，直接返回真实IP地址。包括局域网设备以及一些特殊网络服务，比如游戏服务，这些服务需要客户端知道真实的 IP 地址。
  fake-ip-filter:
    - "*.lan"
    - stun.*.*.*
    - stun.*.*
    - time.windows.com
    - time.nist.gov
    - time.apple.com
    - time.asia.apple.com
    - "*.ntp.org.cn"
    - "*.openwrt.pool.ntp.org"
    - time1.cloud.tencent.com
    - time.ustc.edu.cn
    - pool.ntp.org
    - ntp.ubuntu.com
    - ntp.aliyun.com
    - ntp1.aliyun.com
    - ntp2.aliyun.com
    - ntp3.aliyun.com
    - ntp4.aliyun.com
    - ntp5.aliyun.com
    - ntp6.aliyun.com
    - ntp7.aliyun.com
    - time1.aliyun.com
    - time2.aliyun.com
    - time3.aliyun.com
    - time4.aliyun.com
    - time5.aliyun.com
    - time6.aliyun.com
    - time7.aliyun.com
    - "*.time.edu.cn"
    - time1.apple.com
    - time2.apple.com
    - time3.apple.com
    - time4.apple.com
    - time5.apple.com
    - time6.apple.com
    - time7.apple.com
    - time1.google.com
    - time2.google.com
    - time3.google.com
    - time4.google.com
    - music.163.com
    - "*.music.163.com"
    - "*.126.net"
    - musicapi.taihe.com
    - music.taihe.com
    - songsearch.kugou.com
    - trackercdn.kugou.com
    - "*.kuwo.cn"
    - api-jooxtt.sanook.com
    - api.joox.com
    - joox.com
    - y.qq.com
    - "*.y.qq.com"
    - streamoc.music.tc.qq.com
    - mobileoc.music.tc.qq.com
    - isure.stream.qqmusic.qq.com
    - dl.stream.qqmusic.qq.com
    - aqqmusic.tc.qq.com
    - amobile.music.tc.qq.com
    - "*.xiami.com"
    - "*.music.migu.cn"
    - music.migu.cn
    - "*.msftconnecttest.com"
    - "*.msftncsi.com"
    - localhost.ptlogin2.qq.com
    - "*.*.*.srv.nintendo.net"
    - "*.*.stun.playstation.net"
    - xbox.*.*.microsoft.com
    - "*.ipv6.microsoft.com"
    - "*.*.xboxlive.com"
    - speedtest.cros.wr.pvp.net
  # 主要DNS服务器的配置项，首选DNS服务器，此处设置为解析国内域名时使用的加密DNS服务器，支持明文、DoH、DoT三种格式
  nameserver: 
    # - https://one.one.one.one/dns-query   # Cloudflare
    - https://dns.alidns.com/dns-query    # 阿里
    - https://doh.pub/dns-query           # 腾讯
    # - https://doh.opendns.com/dns-query   # openDNS
    # - https://dns.google/dns-query        # Google
    # - https://rubyfish.cn/dns-query       # 红鱼
  # 通过特定的DNS服务器查找域名所对应的IP地址
  nameserver-policy:
    "geosite:cn,private":                 # 指定中国地区和私人的域名使用对应的DNS服务器
      - https://dns.alidns.com/dns-query  # 阿里
      - https://doh.pub/dns-query         # 腾讯

  # 备用DNS服务器的配置项，次选DNS服务器，利用fallback-filter实现DNS分流，最大程度防止DNS泄漏，此处设置为解析国外域名时使用的加密DNS服务器，支持明文、DoH、DoT三种格式
  fallback: 
    - https://one.one.one.one/dns-query   # Cloudflare
    # - https://dns.alidns.com/dns-query    # 阿里
    # - https://doh.pub/dns-query           # 腾讯
    - https://doh.opendns.com/dns-query   # openDNS
    # - https://dns.google/dns-query        # Google
    # - https://rubyfish.cn/dns-query       # 红鱼
    - tls://8.8.4.4
  # 用来过滤需要使用备用服务器的配置项，可以在这里指定一个正则表达式，只有符合该正则表达式的域名才会被发送到备用服务器进行解析。其他不匹配的域名将继续使用主要的 DNS 服务器。
  fallback-filter:
    geoip: true       # 决定是否启用地理位置过滤，如果设置为 true，那么Clash将会使用地理位置IP数据库（GeoIP数据库）来判断解析得到的IP地址的地理位置，如果这个 IP 地址的地理位置不在允许的范围内，那么这个 DNS 查询结果就会被拒绝并重新向 fallback 服务器查询。启用 geoip 可以避免一些不需要使用 fallback 服务器查询的 DNS 请求误导到 fallback 服务器，从而提高 DNS 查询的效率。
    geoip-code: CN    # 如果解析得到的IP地址不属于中国大陆（CN），Clash将会使用fallback DNS服务器进行DNS查询
    ipcidr:           # 这个字段用于定义一个或多个IP地址范围，如果解析得到的IP地址在这个范围内，那么这个DNS查询结果就会被拒绝并重新向fallback服务器查询。它的值是一个数组，每个元素都是一个CIDR表达式，表示一个IP地址范围。排除掉一些无效或没有意义的IP，提高效率。
      - 240.0.0.0/4   # 表示从240.0.0.0到255.255.255.255的所有IP地址。这些地址在当前的互联网协议中是不可用的，而且是受污染的IP地址段，连接这些IP非常危险，可能连接到一些可能被感染的终端。
      - 0.0.0.0/32    # 向0.0.0.0/32和127.0.0.1/32发起DNS查询没有任何意义，故排除。
      - 127.0.0.1/32
    domain:           # ipcidr用明文表示被排除的ip，这里则可以用域名来表示被排除的ip
      - +.google.com
      - +.facebook.com
      - +.twitter.com
      - +.youtube.com
      - +.xn--ngstr-lra8j.com
      - +.google.cn
      - +.googleapis.cn
      - +.googleapis.com
      - +.gvt1.com

# 订阅转换地址：https://cheery-pudding-86450b.netlify.app/
proxy-providers:
  free:
    type: http
    url: "https://raw.githubusercontent.com/wucd18/self_nodes_subscribe/f141a5f7f2e72ea7d20c8f48f2c09eec6fc76f3e/selfnodemode_clash.yml?token=GHSAT0AAAAAACEF6UZJKANRGXXE56CQ5PREZEUITOQ"
    interval: 3600
    path: ./free.yaml
    health-check:
      enable: true
      interval: 600
      # lazy: true
      url: http://www.gstatic.com/generate_204

proxy-groups:
    - { name: '🚀 节点选择', type: select, use: ['free'], proxies: ['⚖️ Lv2负载均衡-散列','⚖️ Lv2负载均衡-轮询','♻️ Lv2自动选择', '♻️ 自动选择', '♻️ ChatGPT节点',DIRECT] }
    # 散列适用于代理服务器落地IP不同的情况，利用哈希算法随机分配网页连接的服务器，但同一个目标IP只会连接一个代理服务器，防止网站风控
    - { name: '⚖️ Lv2负载均衡-散列', type: load-balance, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, strategy: consistent-hashing, proxies: ['♻️ Lv2自动选择','♻️ 自动选择','♻️ 香港','♻️ 新加坡','♻️ 日本','♻️ 台湾','♻️ Others','♻️ America' ] }
    # 轮询适用于代理服务器落地IP相同的情况，可以最大化节点利用率，同一个目标IP可以连接多个代理服务器，按照节点顺序，挨个匹配请求，但很有可能受到网站风控
    - { name: '⚖️ Lv2负载均衡-轮询', type: load-balance, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, strategy: round-robin, proxies: ['♻️ Lv2自动选择','♻️ 自动选择','♻️ 香港','♻️ 新加坡','♻️ 日本','♻️ 台湾','♻️ Others','♻️ America' ] }
    - { name: '📲 电报消息', type: select, use: ['free'], proxies: ['🚀 节点选择', '♻️ Lv2自动选择', '♻️ 自动选择', DIRECT] }
    - { name: '🧠 ChatGPT', type: select, use: ['free'], proxies: ['♻️ ChatGPT节点', '🚀 节点选择', '♻️ Lv2自动选择', '♻️ 自动选择', DIRECT] }
    - { name: '🌍 国外媒体', type: select, use: ['free'], proxies: ['🚀 节点选择', '♻️ Lv2自动选择', '♻️ 自动选择', DIRECT] }
    - { name: '📢 谷歌FCM', type: select, use: ['free'], proxies: ['🚀 节点选择', '♻️ Lv2自动选择', '♻️ 自动选择', DIRECT] }
    - { name: '🍎 苹果服务', type: select, use: ['free'], proxies: [DIRECT, '🚀 节点选择', '♻️ Lv2自动选择', '♻️ 自动选择'] }
    - { name: '🕸️ 局域网', type: select, use: ['free'], proxies: [DIRECT, '🚀 节点选择', '♻️ Lv2自动选择', '♻️ 自动选择'] }
    - { name: '🎯 全球直连', type: select, use: ['free'], proxies: [DIRECT, '🚀 节点选择', '♻️ Lv2自动选择', '♻️ 自动选择'] }
    - { name: '🛑 广告拦截', type: select, use: ['free'], proxies: [REJECT, DIRECT, '🎯 全球直连'] }
    - { name: '🐟 漏网之鱼', type: select, use: ['free'], proxies: ['🚀 节点选择', '🎯 全球直连', '♻️ Lv2自动选择', '♻️ 自动选择', DIRECT] }
    - { name: '♻️ Lv2自动选择', type: url-test, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, filter: 'Lv2', use: ['free'] }
    - { name: '♻️ 自动选择', type: url-test, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, filter: '^(?:[^I]|I[^E]|IE[^P]|IEP[^L])*$', use: ['free'] }
    - { name: '♻️ 香港', type: url-test, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, filter: '香港-|香港A', use: ['free'] }
    - { name: '♻️ 新加坡', type: url-test, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, filter: '新加坡', use: ['free'] }
    - { name: '♻️ 日本', type: url-test, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, filter: '日本', use: ['free'] }
    - { name: '♻️ 台湾', type: url-test, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, filter: '台湾', use: ['free'] }
    - { name: '♻️ Others', type: url-test, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, filter: '英国|德国|印度', use: ['free'] }
    - { name: '♻️ ChatGPT节点', type: url-test, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, filter: '台湾-2|日本-4|日本-1|美国奈飞', use: ['free'] }
    - { name: '♻️ America', type: url-test, url: 'http://www.gstatic.com/generate_204', interval: 300, tolerance: 50, filter: '广州->美国', use: ['free'] }

rule-providers:
  reject:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./ruleset/reject.yaml
    interval: 43200

  icloud:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"
    path: ./ruleset/icloud.yaml
    interval: 43200

  apple:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
    path: ./ruleset/apple.yaml
    interval: 43200

  google:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"
    path: ./ruleset/google.yaml
    interval: 43200

  proxy:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"
    filter: '^(?:[^o]|o[^p]|op[^e]|ope[^n]|open[^a]|opena[^i])*$'
    path: ./ruleset/proxy.yaml
    interval: 43200

  direct:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
    path: ./ruleset/direct.yaml
    interval: 43200

  private:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"
    path: ./ruleset/private.yaml
    interval: 43200

  gfw:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
    path: ./ruleset/gfw.yaml
    interval: 43200

  tld-not-cn:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"
    path: ./ruleset/tld-not-cn.yaml
    interval: 43200

  telegramcidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"
    path: ./ruleset/telegramcidr.yaml
    interval: 43200

  cncidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./ruleset/cncidr.yaml
    interval: 43200

  lancidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./ruleset/lancidr.yaml
    interval: 43200

  applications:
    type: http
    behavior: classical
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
    path: ./ruleset/applications.yaml
    interval: 43200

rules:
  - 'RULE-SET,applications,🎯 全球直连'             # 常用国内app直连
  - 'RULE-SET,reject,🛑 广告拦截'                   # 广告名单

  # 两个在线面板直连
  - 'DOMAIN,clash.razord.top,DIRECT'                
  - 'DOMAIN,yacd.haishan.me,DIRECT'

  # Google服务连接美国节点，防止Google voice账号被封禁
  - 'DOMAIN-SUFFIX,voice.google.com,♻️ America'
  - 'DOMAIN-SUFFIX,accounts.google.com,♻️ America'
  - 'DOMAIN-SUFFIX,android.clients.google.com,♻️ America'
  - 'DOMAIN-SUFFIX,play.google.com,♻️ America'
  - 'DOMAIN-SUFFIX,apis.google.com,♻️ America'
  - 'DOMAIN-SUFFIX,clients2.google.com,♻️ America'
  - 'DOMAIN-SUFFIX,lh3.google.com,♻️ America'
  - 'DOMAIN-SUFFIX,payments.google.com,♻️ America'
  - 'DOMAIN-SUFFIX,mtalk.google.com,♻️ America'
  - 'DOMAIN-SUFFIX,web.voice.telephony.goog,♻️ America'
  - 'DOMAIN-SUFFIX,googleapis.com,♻️ America'
  - 'DOMAIN-SUFFIX,googleusercontent.com,♻️ America'
  - 'DOMAIN-SUFFIX,csp.withgoogle.com,♻️ America'
  - 'DOMAIN-SUFFIX,gstatic.com,♻️ America'
  - 'DOMAIN-SUFFIX,google-analytics.com,♻️ America'

  - 'DOMAIN-SUFFIX,dcg.microsoft.com,🎯 全球直连'    # 微软“手机连接”直连，不然会显示“无法连接到Android”
  - 'DOMAIN-SUFFIX,openai.com,🧠 ChatGPT'           # ChatGPT使用未被屏蔽节点
  - 'DOMAIN,www.bing.com,🚀 节点选择'
  - 'RULE-SET,telegramcidr,📲 电报消息'              # telegraph消息接收
  - 'RULE-SET,proxy,🌍 国外媒体'                     # 代理列表
  - 'RULE-SET,google,📢 谷歌FCM'                     # 谷歌网址
  - 'RULE-SET,gfw,🌍 国外媒体'                       # GFWList
  - 'RULE-SET,icloud,🍎 苹果服务'                    # iCloud
  - 'RULE-SET,apple,🍎 苹果服务'                     # apple

  - 'RULE-SET,lancidr,🕸️ 局域网'                     # 局域网列表
  - 'RULE-SET,private,🕸️ 局域网'                     # 私有网络列表

  - 'RULE-SET,cncidr,🎯 全球直连'                    # 国内网址
  - 'RULE-SET,direct,🎯 全球直连'                    # 直连列表
  
  # 利用GEOIP和GEOSITE进行分流
  - 'GEOIP,LAN,🎯 全球直连'
  - 'GEOIP,CN,🎯 全球直连'
  - 'GEOSITE,CN,🎯 全球直连'

  - 'MATCH,🐟 漏网之鱼'                              # 剩余没有提到的网址连的节点

  # 如果在后面添加',no-resolve',则表示不解析DNS
